# CLion remote docker environment (How to build docker container, run and stop it)
#
# Build and run:
#   docker build -t clion/remote-cpp-env:0.5 -f Dockerfile.remote-cpp-env .
#   docker run -d --cap-add sys_ptrace -p 127.0.0.1:2222:22 --mount type=bind,source="E:\WIN\Development\practical-2021\data",target=/rf_data --name clion_remote_env clion/remote-cpp-env:0.5 && ssh-keygen -f "$HOME/.ssh/known_hosts" -R "[localhost]:2222"
#
# stop:
#   docker stop clion_remote_env
#
# ssh credentials (test user):
#   user@password

FROM ubuntu:20.04

RUN DEBIAN_FRONTEND="noninteractive" apt-get update && TZ="DE" apt-get -y install tzdata


RUN apt-get update \
   && apt-get install -y ssh \
      build-essential \
      gcc \
      g++ \
      gdb \
      clang \
      cmake \
      rsync \
      tar \
	  git \
      python \
	  python3-pip \
	  flex \
	  bison\
	  libtbb-dev \
	  r-base \
	  dirmngr \
      gnupg \
      apt-transport-https \
      ca-certificates software-properties-common \
	  curl sudo #apparently, the softwipe install needs curl to install lizard (and "needs" sudo) \

# Add CRAN repository and install R
RUN apt-get update && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \
 	&& add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'

# Install reference installation package
RUN R -e "install.packages('TreeDist',dependencies=TRUE)"

# create user for raxml, softwipe, and the ssh connection to CLion
RUN useradd -m user \
  && yes password | passwd user

RUN usermod -s /bin/bash user


# Install SoftWipe
RUN pip3 install numpy scipy compiledb \
	&& git clone https://github.com/adrianzap/softwipe.git /home/user/softwipe \
	&& apt-get install -y \
		llvm \
		clang-tidy \
		cppcheck \
	&& apt-get clean
RUN cd /home/user/softwipe \
	&& git clone https://github.com/Kitware/KWStyle.git \
	&& cd KWStyle \
	&& cmake . \
	&& make -j 3 CC="clang" CXX="clang++" CFLAGS="" CXXFLAGS="" CPPFLAGS="" LDFLAGS="" \
	&& make install

RUN chmod 755 /home/user/softwipe/softwipe.py && /home/user/softwipe/softwipe.py || true
RUN ln -s     /home/user/softwipe/softwipe.py /usr/bin/softwipe

# Install and build alexis reference implementation for standard RF distance
RUN git clone https://github.com/stamatak/standard-RAxML.git /home/user/raxml\
	&& cd /home/user/raxml \
	&& make -f Makefile.AVX.gcc \
	&& rm *.o
RUN chmod 755 /home/user/raxml/raxmlHPC-AVX
RUN ln -s     /home/user/raxml/raxmlHPC-AVX /usr/bin/raxml

# install boost
RUN cd /usr/local \
	&& wget https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.bz2 \
	&& tar --bzip2 -xf boost_1_76_0.tar.bz2 && rm boost_1_76_0.tar.bz2 \
	&& cd boost_1_76_0 && ./bootstrap.sh --with-libraries=thread,log --with-toolset=clang \
	&& ./b2 && ./b2 install


# Start SSH-server for remote toolchain config (useful for i.e. CLion)
RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion \
  && mkdir /run/sshd


CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]